library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(readr)

# Load the datasets

daily_activity <- read_csv("C:/Users/lucas_/Documents/Rproj01/Rproj01/02_Dates/dailyActivity_merged.csv")
sleep_day <- read_csv("C:/Users/lucas_/Documents/Rproj01/Rproj01/02_Dates/sleepDay_merged.csv")
weight_info <- read_csv("C:/Users/lucas_/Documents/Rproj01/Rproj01/02_Dates/weightLogInfo_merged.csv")

# Get a quick overview of each dataset

glimpse(daily_activity)
glimpse(sleep_day)
glimpse(weight_info)

# Check for unique IDs and duplicates

n_distinct(daily_activity$Id)
sum(duplicated(daily_activity))

# Check for missing values

sum(is.na(daily_activity))
sum(is.na(sleep_day))

# Rename columns for clarity and consistency

daily_activity <- daily_activity %>%
  rename(date = ActivityDate,
         total_steps = TotalSteps,
         calories = Calories)

# Convert `Id` to a character and `date` to the proper date format

daily_activity$Id <- as.character(daily_activity$Id)
daily_activity$date <- mdy(daily_activity$date)

# Create a new column for the day of the week

daily_activity$day_of_week <- weekdays(daily_activity$date, abbreviate = FALSE)
                                  
glimpse(daily_activity)

# Rename and clean the sleep data

sleep_day <- sleep_day %>%
  rename(sleep_date = SleepDay,
         total_sleep_minutes = TotalMinutesAsleep,
         total_time_in_bed = TotalTimeInBed) %>%
  mutate(sleep_date = mdy_hms(sleep_date)) %>%
  mutate(sleep_date = as.Date(sleep_date)) # Convert to date format

# Merge the two datasets for a more comprehensive analysis

merged_data <- merge(daily_activity, sleep_day, by.x = c("Id", "date"), by.y = c("Id", "sleep_date"))

glimpse(merged_data)

# Rename and clean the weight data

weight_info <- weight_info %>%
  rename(date = Date,
         weight_kg = WeightKg) %>%
  mutate(date = mdy_hms(date)) %>%
  mutate(date = as.Date(date)) # Convert to date format

# Convert Id to character

weight_info$Id <- as.character(weight_info$Id)

# Merge with the existing dataset

final_merged_data <- merge(merged_data, weight_info, by = c("Id", "date"))

glimpse(final_merged_data)

# Calculate descriptive statistics for key columns

daily_activity %>%
  select(total_steps, calories, VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes) %>%
  summary()

# Calculate the average minutes spent in each activity level

daily_activity %>%
  summarise(
    avg_very_active = mean(VeryActiveMinutes),
    avg_fairly_active = mean(FairlyActiveMinutes),
    avg_lightly_active = mean(LightlyActiveMinutes),
    avg_sedentary = mean(SedentaryMinutes)
  )

# Scatter plot of Total Steps vs. Calories

ggplot(data = daily_activity, aes(x = total_steps, y = calories)) +
  geom_point(color = "red", alpha = 0.6) +
  geom_smooth(method = "lm", color = "darkblue", se = FALSE) +
  labs(title = "Total Steps vs. Calories Burned",
       x = "Total Steps",
       y = "Calories Burned") +
  theme_minimal()

# Bar chart of average steps by day of the week

daily_activity %>%
  group_by(day_of_week) %>%
  summarise(avg_steps = mean(total_steps)) %>%
  ggplot(aes(x = day_of_week, y = avg_steps, fill = day_of_week)) +
  geom_bar(stat = "identity") +
  labs(title = "Average Steps by Day of the Week",
       x = "",
       y = "Average Steps") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Scatter plot of Total Steps vs. Weight

ggplot(data = final_merged_data, aes(x = total_steps, y = weight_kg)) +
  geom_point(color = "#FF6347", alpha = 0.7) +
  labs(title = "Weight vs. Total Steps",
       x = "Total Steps",
       y = "Weight (kg)") +
  theme_minimal()                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
                                  
